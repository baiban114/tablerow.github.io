<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>彦祖，你又来看博客了</title>
    <link>https://baiban114.github.io/tablerow.github.io/</link>
    <description>Recent content on 彦祖，你又来看博客了</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 26 Jul 2021 04:51:02 +0800</lastBuildDate>
    
        <atom:link href="https://baiban114.github.io/tablerow.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>开源协议要点整理</title>
        <link>https://baiban114.github.io/tablerow.github.io/posts/%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E8%A6%81%E7%82%B9%E6%95%B4%E7%90%86/</link>
        <pubDate>Mon, 26 Jul 2021 04:51:02 +0800</pubDate>
        
        <guid>https://baiban114.github.io/tablerow.github.io/posts/%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E8%A6%81%E7%82%B9%E6%95%B4%E7%90%86/</guid>
        <description>彦祖，你又来看博客了 https://baiban114.github.io/tablerow.github.io/posts/%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E8%A6%81%E7%82%B9%E6%95%B4%E7%90%86/ -- https://baiban114.github.io/tablerow.github.io/posts/%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E8%A6%81%E7%82%B9%E6%95%B4%E7%90%86/ - </description>
        </item>
    
    
    
        <item>
        <title>tips</title>
        <link>https://baiban114.github.io/tablerow.github.io/posts/tips/</link>
        <pubDate>Sat, 24 Jul 2021 18:06:08 +0800</pubDate>
        
        <guid>https://baiban114.github.io/tablerow.github.io/posts/tips/</guid>
        <description>彦祖，你又来看博客了 https://baiban114.github.io/tablerow.github.io/posts/tips/ -&lt;h1 id=&#34;考研数学&#34;&gt;考研数学&lt;/h1&gt;
&lt;h2 id=&#34;张宇高数第一讲&#34;&gt;张宇高数第一讲&lt;/h2&gt;
&lt;p&gt;等式 =&amp;gt; 两边取极限、倒数、积分、同乘同除同加减，换位置，目的是得到想要的；
出题套路 =&amp;gt; 改变数字顺序，把本来该在一起的拆开(例1.1)&lt;/p&gt;
&lt;p&gt;sinx &amp;lt;= x；sinx其实比x小，看泰勒展开式就知道；同济书里的证明：&lt;img src=&#34;https://img-blog.csdnimg.cn/20201117164621931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnRfMjAxMg==,size_16,color_FFFFFF,t_70&#34; alt=&#34;alt&#34;&gt;&lt;/p&gt;
&lt;p&gt;数学嘛，又不是主业，实用的该用时想起来就好，其他的看兴趣啦~高中我不都是按兴趣学的嘛~&lt;/p&gt;
- https://baiban114.github.io/tablerow.github.io/posts/tips/ - </description>
        </item>
    
    
    
        <item>
        <title>灵鸡一动</title>
        <link>https://baiban114.github.io/tablerow.github.io/posts/%E7%81%B5%E9%B8%A1%E4%B8%80%E5%8A%A8/</link>
        <pubDate>Wed, 21 Jul 2021 05:37:27 +0800</pubDate>
        
        <guid>https://baiban114.github.io/tablerow.github.io/posts/%E7%81%B5%E9%B8%A1%E4%B8%80%E5%8A%A8/</guid>
        <description>彦祖，你又来看博客了 https://baiban114.github.io/tablerow.github.io/posts/%E7%81%B5%E9%B8%A1%E4%B8%80%E5%8A%A8/ -&lt;blockquote&gt;
&lt;p&gt;使用次数少的（比如安装软件，也没遇到意外情况）就不需要记录了。相同主题整理的多了要考虑拆分，像分库分表一样。&lt;/p&gt;
&lt;p&gt;知识类分三档：死记硬背的、理解的、容易忘也不好整理进体系的小tips。本页记录理解档内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;知识内容都是自己的理解，要时长更新纠错&lt;/p&gt;
&lt;p&gt;标题灵感来自高中物理老师ᕕ( ᐛ )ᕗ&lt;/p&gt;
&lt;h1 id=&#34;老生常谈的概念&#34;&gt;老生常谈的概念&lt;/h1&gt;
&lt;h2 id=&#34;动态和静态&#34;&gt;动态和静态&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;动态&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;静态&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;出处&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;随数据而变的&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;写死的文件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;动态页面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;被调度、分配资源、随运行时环境而改变；有些==状态转换？==、上下文/命名空间等限制&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;程序、作业、镜像&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;操作系统、Docker&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;应该雀食哈，动态才有状态转换的概念&lt;/p&gt;
&lt;h2 id=&#34;线性&#34;&gt;线性：&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;感觉真的像一条线上的关系，&lt;/p&gt;
&lt;p&gt;是连续的么？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;线性关系&#34;&gt;线性关系：&lt;/h6&gt;
&lt;p&gt;​	两个变量之间存在一次方&lt;a href=&#34;https://baike.baidu.com/item/%E5%87%BD%E6%95%B0%E5%85%B3%E7%B3%BB/9846826&#34;&gt;函数关系&lt;/a&gt;，就称它们之间存在线性关系。&lt;a href=&#34;https://baike.baidu.com/item/%E6%AD%A3%E6%AF%94%E4%BE%8B%E5%85%B3%E7%B3%BB/8192987&#34;&gt;正比例关系&lt;/a&gt;是线性关系中的特例，&lt;a href=&#34;https://baike.baidu.com/item/%E5%8F%8D%E6%AF%94%E4%BE%8B%E5%85%B3%E7%B3%BB/8193245&#34;&gt;反比例关系&lt;/a&gt;不是线性关系。&lt;/p&gt;
&lt;p&gt;​	*反比例关系：两个变量乘积不变&lt;/p&gt;
&lt;p&gt;​	如果把这两个变量分别作为点的横坐标与纵坐标，其图象是平面上的一条直线，则这两个变量之间的关系就是线性关系。即如果可以用一个二元一次方程来表达两个变量之间关系的话，这两个变量之间的关系称为线性关系，因而，二元一次方程也称为线性方程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数学里，一般说的线性，是说的线性映射，这是一个函数（或称为映射，function or map），而不是方程 (equation)。&lt;/p&gt;
&lt;p&gt;这个映射要同时满足两个条件：&lt;/p&gt;
&lt;p&gt;1，可加性 f(x + y) = f(x) + f(y)&lt;/p&gt;
&lt;p&gt;2，齐次性（同质性） f(αx) = αf(x)&lt;/p&gt;
&lt;p&gt;也有用 叠加特性：f(ax+by)=af(x)+bf(y) 合起来表示的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;这个齐次性放在齐次线性方程怎么理解？（我连名字都不一定记准。。）&lt;/em&gt;&lt;/p&gt;
&lt;h6 id=&#34;线性的例子&#34;&gt;线性的例子&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;数组：下标和元素一一对应，线性存储&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;线性代数中学到的&#34;&gt;线性代数中学到的&lt;/h6&gt;
&lt;p&gt;行列式中两个向量可以互相表示，说明他们是&lt;strong&gt;线性相关&lt;/strong&gt;的(行列式得0，因为向量平行)&lt;/p&gt;
&lt;h2 id=&#34;流批&#34;&gt;流批！&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;流、流处理&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;批处理&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;出处or举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;流水一样源源不断的；来一个搞一个&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;先攒一批，一次搞一批&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Mybatis流式查询（可实现分页）/win脚本（批处理）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;一般需要注意open和close&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;有些不处理完一批不停&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;字符流、字节流、IO流&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;联机命令接口（算吗？）可交互&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;脱机命令接口&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;操作系统（再看书研究）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;云计算&#34;&gt;云计算&lt;/h1&gt;
&lt;p&gt;（cloud computing）是分布式计算的一种，通过网络“云”将计算处理程序分解成小程序计算。（有点儿像分治？mapreduce?）&lt;/p&gt;
&lt;h2 id=&#34;云计算三种服务模式&#34;&gt;云计算三种服务模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;IaaS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SaaS：(Software as a Service)通过网络进行程序提供的服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PaaS:（Platform as a Service）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是指&lt;a href=&#34;https://baike.baidu.com/item/%E5%B9%B3%E5%8F%B0%E5%8D%B3%E6%9C%8D%E5%8A%A1/4329761&#34;&gt;平台即服务&lt;/a&gt;。  把服务器平台作为一种服务提供的商业模式，以SaaS的模式提交给用户。因此，PaaS也是&lt;a href=&#34;https://baike.baidu.com/item/SaaS&#34;&gt;SaaS&lt;/a&gt;模式的一种应用。但是，PaaS的出现可以加快SaaS的发展，尤其是加快SaaS应用的开发速度(位于中间件层，提供企业进行定制化研发的中间件平台、数据库、应用服务器等)。&lt;/li&gt;
&lt;li&gt;在2007年国内外SaaS厂商先后推出自己的PAAS平台&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在云计算范围内（分布式、网络）考虑这仨的概念！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cloud Foundry是业界第一个开源PaaS云平台。诞生了“容器”？由Vmware小组开发&lt;/p&gt;
&lt;p&gt;而Docker打包时带上了环境（操作系统）？（这里还不明白。其他教程谈到Docker和虚拟机技术的区别是没有抽象出操作系统内核和硬件。但以py为例，创建的py容器雀食带linux操作系统），不用再在另一台机器的配置上麻烦。但单独的docker只是部署小项目的小工具，用容器编排(Docker Compose)和容器集群才算提供Paas。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;单个容器的应用肯定不足以支撑项目，不用集群用不了分布式、云计算？&lt;/p&gt;
&lt;p&gt;Dockerfile和脚本差不多&lt;/p&gt;
&lt;/blockquote&gt;
- https://baiban114.github.io/tablerow.github.io/posts/%E7%81%B5%E9%B8%A1%E4%B8%80%E5%8A%A8/ - </description>
        </item>
    
    
  </channel>
</rss> 