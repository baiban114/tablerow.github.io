<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>彦祖，你又来了</title>
    <link>https://baiban114.github.io/tablerow.github.io/</link>
    <description>Recent content on 彦祖，你又来了</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 28 Aug 2021 16:16:32 +0800</lastBuildDate>
    
        <atom:link href="https://baiban114.github.io/tablerow.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>SSH</title>
        <link>https://baiban114.github.io/tablerow.github.io/posts/ssh/</link>
        <pubDate>Sat, 28 Aug 2021 16:16:32 +0800</pubDate>
        
        <guid>https://baiban114.github.io/tablerow.github.io/posts/ssh/</guid>
        <description>彦祖，你又来了 https://baiban114.github.io/tablerow.github.io/posts/ssh/ -&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;​	Secure Shell(SSH) 是由 IETF(The Internet Engineering Task Force) 制定的建立在应用层基础上的安全网络==协议==。它是专为远程登录会话(甚至可以用Windows远程登录Linux服务器进行文件互传)和其他网络服务提供安全性的协议，可有效弥补网络中的漏洞。通过SSH，可以把所有传输的数据进行加密，也能够防止DNS欺骗和IP欺骗。还有一个额外的好处就是传输的数据是经过压缩的，所以可以加快传输的速度。目前已经成为Linux系统的标准配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;命令行ssh可以文件互传吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安全！&lt;/li&gt;
&lt;li&gt;方便！两台机器间不用输入账号密码就可验证身份！（通过保存在服务器和客户端上的密钥）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ssh的安全机制&#34;&gt;SSH的安全机制&lt;/h2&gt;
&lt;p&gt;SSH之所以能够保证安全，原因在于它采用了==非对称加密技术(RSA)==加密了所有传输的数据。&lt;/p&gt;
&lt;p&gt;传统的网络服务程序，如FTP、Pop和Telnet其本质上都是不安全的；因为它们在网络上用明文传送数据、用户帐号和用户口令，很容易受到==中间人==（man-in-the-middle）攻击方式的攻击。就是存在另一个人或者一台机器冒充真正的服务器接收用户传给服务器的数据，然后再冒充用户把数据传给真正的服务器。&lt;/p&gt;
&lt;p&gt;但并不是说SSH就是绝对安全的，因为它本身提供两种级别的验证方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一种级别（基于口令的安全验证）：只要你知道自己帐号和口令，就可以登录到远程主机。所有传输的数据都会被加密，但是不能保证你正在连接的服务器就是你想连接的服务器。可能会有别的服务器在冒充真正的服务器，也就是受到“中间人攻击”这种方式的攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;传统的账号密码验证？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;第二种级别（基于密钥的安全验证）：你必须为自己创建一对密钥，并把公钥放在需要访问的服务器上。如果你要连接到SSH服务器上，客户端软件就会向服务器发出请求，请求用你的密钥进行安全验证。服务器收到请求之后，先在该服务器上你的主目录下寻找你的公钥，然后把它和你发送过来的公钥进行比较。如果两个密钥一致，服务器就用公钥加密“质询”(challenge)并把它发送给客户端软件。客户端软件收到“质询”之后就可以用你的私钥在本地解密再把它发送给服务器完成登录。与第一种级别相比，第二种级别不仅加密所有传输的数据，也不需要在网络上传送口令，因此安全性更高，可以有效防止中间人攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/baiban114/tianrun/raw/master/imgs/20210831010042.png&#34; alt=&#34;image-20210831010041400&#34;&gt;&lt;/p&gt;
&lt;p&gt;##基于密钥的安全验证-命令示例&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在本机生成一对密钥（即私钥与公钥）：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh-keygen -t rsa   &lt;span style=&#34;color:#228b22&#34;&gt;#-t表示类型选项，这里采用rsa加密算法&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后根据提示一步步的按enter键即可（其中有一个提示是要求设置私钥口令passphrase，不设置则为空，这里看心情吧，如果不放心私钥的安全可以设置一下），执行结束以后会在 /home/当前用户 目录下生成一个 .ssh 文件夹,其中包含私钥文件 id_rsa 和公钥文件 id_rsa.pub。
&lt;strong&gt;将公钥复制到远程主机中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用ssh-copy-id命令将公钥复制到远程主机。ssh-copy-id会将公钥写到远程主机的 ~/ .ssh/authorized_keys文件中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh-copy-id 用户名@ip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样以后登录这台远程主机就不用账号密码了~&lt;/p&gt;
&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;
&lt;p&gt;centos7和windows默认带有SSH工具；（OpenSSH?）可以用一下命令检查：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rpm -qa | grep ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先确认服务器上的ssh-server是否已经启动了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ps -e | grep ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SSH默认使用22端口。&lt;/p&gt;
&lt;p&gt;每登录一台新的主机，就会将它添加到已知主机列表。&lt;/p&gt;
&lt;h1 id=&#34;拓展github码云上的ssh&#34;&gt;拓展：github、码云上的SSH&lt;/h1&gt;
&lt;p&gt;可以在网页端操作，为账户生成SSH key公钥；除了账户SSH key外，仓库也有key，但只供拉取权限；&lt;/p&gt;
&lt;p&gt;毕竟拉可以随便拉，推需要验证身份；&lt;/p&gt;
&lt;p&gt;这也是在SSH相对于https的优越之处：每次fetch和push时不再需要麻烦地输入账号密码（远程登陆也不需要账号密码了）；&lt;/p&gt;
- https://baiban114.github.io/tablerow.github.io/posts/ssh/ - </description>
        </item>
    
    
    
        <item>
        <title>管理计算机上的软件</title>
        <link>https://baiban114.github.io/tablerow.github.io/posts/%E7%AE%A1%E7%90%86%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8A%E7%9A%84%E8%BD%AF%E4%BB%B6/</link>
        <pubDate>Mon, 23 Aug 2021 16:45:08 +0800</pubDate>
        
        <guid>https://baiban114.github.io/tablerow.github.io/posts/%E7%AE%A1%E7%90%86%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8A%E7%9A%84%E8%BD%AF%E4%BB%B6/</guid>
        <description>彦祖，你又来了 https://baiban114.github.io/tablerow.github.io/posts/%E7%AE%A1%E7%90%86%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8A%E7%9A%84%E8%BD%AF%E4%BB%B6/ -&lt;h1 id=&#34;前置知识&#34;&gt;前置知识&lt;/h1&gt;
&lt;p&gt;代码+文档（bushi）&lt;/p&gt;
&lt;p&gt;装在计算机上的软件，在硬盘上是静态的一系列代码、文件的集合，运行时成为动态的进程；&lt;/p&gt;
&lt;p&gt;但想要保证软件正常运行，需要环境+软件+库/依赖相匹配才行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;环境：
&lt;ul&gt;
&lt;li&gt;操作系统：基本环境，也是可执行文件的直接运行环境；&lt;/li&gt;
&lt;li&gt;运行环境：如java字节码文件需要运行在jvm里，解释型语言要运行在有解释器的操作系统上，js要在浏览器or Node.js运行一样；似乎都是非纯编译运行的语言需要；在自己的环境中运行，就不需要转换成操作系统的可执行文件；&lt;/li&gt;
&lt;li&gt;java、python等环境安装后，需要将环境的位置添加到操作系统的PATH环境变量中，以确保操作系统能找到他们。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;软件
&lt;ul&gt;
&lt;li&gt;比程序要大一点的概念，也是一系列指令；&lt;/li&gt;
&lt;li&gt;因此软件最终都会成为机器能看懂的语言，在硬盘上不论是被编译成的可执行文件，还是脚本语言文件（由解释器读入内存一行就解释一行？可能要看看py和js的原理才懂），在cpu接触前，都会成为机器语言；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;库
&lt;ul&gt;
&lt;li&gt;自己的库，如C语言#include的库;Java中的jre就是jvm+基础类库&lt;/li&gt;
&lt;li&gt;系统提供的动态链接库，如win下的dll、linux的lib文件夹内容；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;软件安装方式&#34;&gt;软件安装方式&lt;/h1&gt;
&lt;h2 id=&#34;源码编译&#34;&gt;源码编译&lt;/h2&gt;
&lt;p&gt;下载源代码（如redis使用C语言开发的），然后使用对应版本的编译器（如gcc）在源码文件夹下编译，最终形成可执行文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在不同cpu架构下源码包和编译器会有区别,因为底层的指令集不同；&lt;/p&gt;
&lt;p&gt;安装流程和C语言源文件运行流程类似&lt;/p&gt;
&lt;h2 id=&#34;安装包&#34;&gt;安装包&lt;/h2&gt;
&lt;p&gt;msi\exe\rpm\ipk\apk\aab;&lt;/p&gt;
&lt;p&gt;安装包也是由源码编译而成的二进制文件；但已经过官方封装，开箱即用。&lt;/p&gt;
&lt;p&gt;单独安装安装包可能会遇到安装包之间的依赖问题。&lt;/p&gt;
&lt;h2 id=&#34;包管理器&#34;&gt;包管理器&lt;/h2&gt;
&lt;p&gt;应用商店等也是类似的角色,在官方的服务器上统一管理安装包;&lt;/p&gt;
&lt;p&gt;apt、yum、pip、maven?、nodejs等，从源（保管安装包的服务器）上下载安装软件；可以通过写配置文件来指定多个源；&lt;/p&gt;
&lt;p&gt;一些包管理器可以帮助解决依赖问题。&lt;/p&gt;
&lt;h2 id=&#34;安装脚本&#34;&gt;安装脚本&lt;/h2&gt;
&lt;p&gt;如docker，网上有提供脚本直接安装;&lt;/p&gt;
&lt;h2 id=&#34;可执行文件&#34;&gt;可执行文件&lt;/h2&gt;
&lt;p&gt;可执行文件 (executable file) 指的是可以由&lt;strong&gt;操作系统进行加载执行的文件&lt;/strong&gt;。在不同的操作系统环境下，可执行程序的呈现方式不一样。&lt;/p&gt;
&lt;p&gt;有时被称为“绿色免安装”版，“安装包”其实就是全部程序压缩一下；这种软件安装时不去注册表注册。&lt;/p&gt;
&lt;p&gt;如windows下的exe;&lt;/p&gt;
&lt;p&gt;任何文件都是有数字（编码）组成的，即使是文本在物理上也是以二进制存储的；在一些编辑器下，exe也可以直接被文本编辑器以字符的形式查看。图片、视频也是二进制文件，但不是可执行文件。&lt;/p&gt;
&lt;p&gt;大家都知道计算机的存储在物理上是二进制的，所以文本文件与二进制文件的区别并不是物理上的，而是&lt;strong&gt;逻辑上&lt;/strong&gt;的。这两者只是在编码层次上有差异。&lt;/p&gt;
&lt;p&gt;可执行文件就是操作系统可以执行的、不需要指定其他软件来执行的文件。一个文件是不是可执行文件要看操作系统的定义。&lt;/p&gt;
&lt;p&gt;pyInstaller可以把py程序打包成exe程序，然后在没有安装python环境的电脑上能运行啦！&lt;/p&gt;
&lt;p&gt;But why MC还需要装java，而不是打包成exe?java应该可以打包吧&lt;/p&gt;
&lt;h1 id=&#34;软件卸载&#34;&gt;软件卸载&lt;/h1&gt;
&lt;h2 id=&#34;管理器控制面板&#34;&gt;管理器/控制面板&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;使用包管理器的命令卸载&lt;/li&gt;
&lt;li&gt;windows的控制面板:操作系统找到对应的卸载程序并运行;
&lt;ul&gt;
&lt;li&gt;这样似乎对exe直接运行的软件不行;是因为他们没去注册表报道吗?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;软件官方提供卸载程序&#34;&gt;软件官方提供卸载程序&lt;/h2&gt;
&lt;p&gt;windows下比较常见;&lt;/p&gt;
&lt;h2 id=&#34;可执行文件-1&#34;&gt;可执行文件&lt;/h2&gt;
&lt;p&gt;直接删除即可；注意不要被快捷方式迷惑了。可以对快捷方式右键-&amp;gt;打开文件位置找到真正的文件所在处。&lt;/p&gt;
&lt;h1 id=&#34;附录1注册表&#34;&gt;附录1：注册表&lt;/h1&gt;
&lt;h1 id=&#34;附录2选择安装包&#34;&gt;附录2：选择安装包&lt;/h1&gt;
&lt;p&gt;x86:适用于字长为32位的计算机；因为在386年代所以叫x86;&lt;/p&gt;
&lt;p&gt;x86_64、arm64：适用于32位和64位的计算机；只是叫法不同（intel和amd）；&lt;/p&gt;
&lt;p&gt;el7:centos7&lt;/p&gt;
- https://baiban114.github.io/tablerow.github.io/posts/%E7%AE%A1%E7%90%86%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8A%E7%9A%84%E8%BD%AF%E4%BB%B6/ - </description>
        </item>
    
    
    
        <item>
        <title>文件系统</title>
        <link>https://baiban114.github.io/tablerow.github.io/posts/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Thu, 05 Aug 2021 17:07:35 +0800</pubDate>
        
        <guid>https://baiban114.github.io/tablerow.github.io/posts/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid>
        <description>彦祖，你又来了 https://baiban114.github.io/tablerow.github.io/posts/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/ -&lt;blockquote&gt;
&lt;p&gt;文件系统是操作系统用于明确存储设备（常见的是磁盘，也有基于NAND Flash的固态硬盘）或分区上的文件的方法和数据结构；即在存储设备上组织文件的方法。操作系统中负责管理和存储文件信息的软件机构称为文件管理系统，简称文件系统。&lt;/p&gt;
&lt;p&gt;文件系统由三部分组成：文件系统的接口，对对象操作和管理的软件集合，对象及属性。从系统角度来看，文件系统是对文件存储设备的空间进行组织和分配，负责文件存储并对存入的文件进行保护和检索的系统。具体地说，它负责为用户建立文件，存入、读出、修改、转储文件，控制文件的存取，当用户不再使用时撤销文件等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;ufs联合文件系统&#34;&gt;UFS：联合文件系统&lt;/h1&gt;
&lt;p&gt;Docker使用的系统&lt;/p&gt;
&lt;p&gt;UnionFs（联合文件系统）：Union文件系统（UnionFs）是一种分层、轻量级并且高性能的文件系统，他支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下（ unite several directories into a single virtual filesystem)。Union文件系统是 Docker镜像的基础。镜像可以通过分层来进行继承，基于基础镜像（没有父镜像），可以制作各种具体的应用镜像 特性：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录。&lt;/p&gt;
&lt;h1 id=&#34;hdfs&#34;&gt;HDFS&lt;/h1&gt;
&lt;p&gt;Hadoop生态系统中的分布式文件系统&lt;/p&gt;
- https://baiban114.github.io/tablerow.github.io/posts/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/ - </description>
        </item>
    
    
    
        <item>
        <title>Hugo使用经验</title>
        <link>https://baiban114.github.io/tablerow.github.io/posts/hugo%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</link>
        <pubDate>Mon, 26 Jul 2021 16:47:18 +0800</pubDate>
        
        <guid>https://baiban114.github.io/tablerow.github.io/posts/hugo%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</guid>
        <description>彦祖，你又来了 https://baiban114.github.io/tablerow.github.io/posts/hugo%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/ -&lt;h1 id=&#34;写在前面&#34;&gt;写在前面&lt;/h1&gt;
&lt;p&gt;​		hugo最强使用技巧：&lt;del&gt;别用hugo&lt;/del&gt;开个玩笑(狗头)&lt;/p&gt;
&lt;p&gt;​		这个世界上的静态网站生成器至少有&lt;a href=&#34;https://jamstack.org/generators/&#34;&gt;333&lt;/a&gt;个，先从我的角度说说其他静态网站生成器的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;VuePress：基于vue构建，可以顺便练习vue，减小web开发者的学习成本;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[√]中文文档&lt;/li&gt;
&lt;li&gt;[√]主题丰富（在github主页有）&lt;/li&gt;
&lt;li&gt;插件挺丰富，不知道常用的有没，但是大丈夫！因为是Vue，自己集成功能很方便！&lt;/li&gt;
&lt;li&gt;文档说是单页应用，解决路由时音乐播放器重新加载播放的问题应该简单一些；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hexo：由中国台湾人创建，咱们用的人多所以网上教程丰富；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;√]中文文档&lt;/li&gt;
&lt;li&gt;[√]主题丰富&lt;/li&gt;
&lt;li&gt;[√]插件齐全（几乎不用敲代码，npm上都一堆插件）&lt;/li&gt;
&lt;li&gt;多个静态页面&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WordPress:嗯。。和hugo都是老外搞的，风格半斤八两，都用了&amp;quot;shortcode&amp;quot;这种奇怪的东西（类似模板引擎或vue的组件，但还需要额外的学习成本），支持OneNote上传笔记（鸡肋）；可以和PHP配套使用；&lt;/p&gt;
&lt;p&gt;然后。。。hugo的优点可能是快？我不知道。。。&lt;del&gt;可我是男人&lt;/del&gt;可如果开发速度慢、学习成本高不还相当于慢了。。中文文档还相当于没有！&lt;/p&gt;
&lt;p&gt;如果重命名content下的md文件，hugo编译时不会把删掉该替换的文件。不知道其他工具怎么样。&lt;/p&gt;
&lt;p&gt;当然所有工具都是没有上限的！只是==碰壁次数与资料多少、学习成本==之类的区别！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;快速开始&#34;&gt;快速开始&lt;/h1&gt;
&lt;p&gt;中文文档少有的中文233：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.gohugo.cn/getting-started/quick-start/&#34;&gt;快速入门 | Hugo 中文网 (gohugo.cn)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中下载主题这步可以自己选，主题商城也在这个网站中↑；&lt;/p&gt;
&lt;p&gt;我所用的主题是Diary，可以在博客左下↙版权那里找到github仓库。自己魔改了一部分，为了添加功能。&lt;/p&gt;
&lt;h1 id=&#34;常用命令脚本&#34;&gt;常用命令、脚本&lt;/h1&gt;
&lt;p&gt;​		utteranc.es客户端地址：https://utteranc.es/client.js&lt;/p&gt;
&lt;p&gt;​		获取QQ头像的url:	&lt;code&gt;https://q1.qlogo.cn/g?b=qq&amp;amp;nk=QQ号码&amp;amp;s=640&lt;/code&gt;。用edge浏览器的时候发现，如果用https访问博客，头像url用http访问的话会被拦截。&lt;/p&gt;
&lt;p&gt;​		每次输入这么多命令太麻烦了，hugo似乎没有把自己提交到github的命令，索性写了一个windows脚本上传博客。提前在path环境变量中配置hugo命令所在目录，以在任意位置执行hugo命令。&lt;/p&gt;
&lt;p&gt;​		还是第一次主动写windows脚本，上一次写还是上一次（呸，上次是改U盘图标，照网上抄的）。脚本文件后缀名为.bat，直接在里面写命令即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo -D
hugo
&lt;span style=&#34;color:#658b00&#34;&gt;cd&lt;/span&gt; ./public
git add -A
git commit -m &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;脚本提交&amp;#34;&lt;/span&gt;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;​		先执行一遍hugo -D是为了将草稿也编译一下；再不带-D，这样主页不会显示草稿；&lt;/p&gt;
&lt;p&gt;​		还有一个博客生成测试脚本，执行hugo server命令，用于在本地实时查看页面；&lt;/p&gt;
&lt;p&gt;​		也可以使用github Actions来完成持续集成（CI）,顺道学习Devops；难得有个项目有提供hugo的插件，我却还是觉得脚本成本低，，&lt;/p&gt;
&lt;h1 id=&#34;自己钻研的定制经验&#34;&gt;自己钻研的定制经验&lt;/h1&gt;
&lt;p&gt;​		因为没时间系统学习怎么制作hugo主题，我只能在Diary主题的基础上瞎摸索，这里是一些经验；如果其他主题作者命名方式一样（约定大于配置233）就会很好办。&lt;/p&gt;
&lt;p&gt;​		对Diary主题改动了一些，有点儿想提PR的冲动。。。不过萌新经验还差太多，不知道合不合适。。。羞(．． )…&lt;/p&gt;
&lt;h2 id=&#34;站点主题目录结构&#34;&gt;站点&amp;amp;&amp;amp;主题目录结构&lt;/h2&gt;
&lt;p&gt;根站点和主题文件夹有相同的目录结构，hugo会优先使用根站点下的配置。&lt;/p&gt;
&lt;p&gt;以Diary为例，主题根文件夹下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;layout放置了页面的主体框架，其中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;shortcodes目录定义shortcode，可以在其他html中当组件用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;_default下存放了主体部分的html框架（即body中的主div内的内容，正中间的主体）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;baseof.html是全html页面的框架，其中head部分被放到了partials文件夹下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;single.html是文章内容的html&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以自定义友链、“关于我”这种功能的页面在这里，记得将single中的主体框架部分拷贝过来，修改{{.Content}}附近；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;踩坑：自定义页面的时候，要全用{{define main}}包裹起来，我把css放在外边，结果只编译了css&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;partials有评论、head、自定义head、版权、主体js等部分的html&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sidebar:电脑端侧边栏的大纲（说是大纲是因为引用了版权页，而版权页单独写在一个html里），移动端这部分有单独页面，不在这里（见baseof.html）；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;data 存储数据文件供模板使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;public&lt;/em&gt; 生成的静态网站文件会放在这里&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;站点配置文件configtoml&#34;&gt;站点配置文件config.toml&lt;/h2&gt;
&lt;p&gt;注意不要在主题文件夹下放config！那儿也会生效！&lt;/p&gt;
&lt;h2 id=&#34;博文开头的元数据配置&#34;&gt;博文开头的元数据配置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;layout: &amp;quot;&amp;quot;	不用带后缀；该md文件会寻找layout下同名html文件渲该页染；&lt;/li&gt;
&lt;li&gt;draft: true   为true时是草稿，不带-D参数的hugo命令不会编译、在首页显示草稿；这也是为什么我要在脚本里先后执行两次命令。
&lt;ul&gt;
&lt;li&gt;关于我、友链等页面可以用这种方式从隐藏，只在特定页面出现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他的可以见主题文件夹下/archetypes/default.md&lt;/p&gt;
&lt;h1 id=&#34;拓展&#34;&gt;拓展&lt;/h1&gt;
&lt;h2 id=&#34;live2d看板娘&#34;&gt;Live2d看板娘&lt;/h2&gt;
&lt;h3 id=&#34;基础款&#34;&gt;基础款&lt;/h3&gt;
&lt;p&gt;​		基础款&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;type&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;charset&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#658b00&#34;&gt;src&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/npm/live2d-widget@3.1.4/lib/L2Dwidget.min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;type&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt;&amp;gt;
    L2Dwidget.init({
        model: {
            scale: &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,
            hHeadPos: &lt;span style=&#34;color:#b452cd&#34;&gt;0.5&lt;/span&gt;,
            vHeadPos: &lt;span style=&#34;color:#b452cd&#34;&gt;0.618&lt;/span&gt;,
            jsonPath: &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;https://cdn.jsdelivr.net/npm/live2d-widget-model-hibiki@1.0.5/assets/shizuku.model.json&amp;#39;&lt;/span&gt;,       &lt;span style=&#34;color:#228b22&#34;&gt;// xxx.model.json 的路径,换人物修改这个
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        },
        display: {
            superSample: &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,     &lt;span style=&#34;color:#228b22&#34;&gt;// 超采样等级
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            width: &lt;span style=&#34;color:#b452cd&#34;&gt;120&lt;/span&gt;,         &lt;span style=&#34;color:#228b22&#34;&gt;// canvas的宽度
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            height: &lt;span style=&#34;color:#b452cd&#34;&gt;300&lt;/span&gt;,        &lt;span style=&#34;color:#228b22&#34;&gt;// canvas的高度
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            position: &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;,   &lt;span style=&#34;color:#228b22&#34;&gt;// 显示位置：左或右
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            hOffset: &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;,         &lt;span style=&#34;color:#228b22&#34;&gt;// canvas水平偏移
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            vOffset: &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;,         &lt;span style=&#34;color:#228b22&#34;&gt;// canvas垂直偏移
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        },
        mobile: {
            show: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;true&lt;/span&gt;,         &lt;span style=&#34;color:#228b22&#34;&gt;// 是否在移动设备上显示
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            scale: &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,           &lt;span style=&#34;color:#228b22&#34;&gt;// 移动设备上的缩放
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            motion: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;true&lt;/span&gt;,       &lt;span style=&#34;color:#228b22&#34;&gt;// 移动设备是否开启重力感应
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        },
        react: {
            opacityDefault: &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,  &lt;span style=&#34;color:#228b22&#34;&gt;// 默认透明度
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            opacityOnHover: &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,  &lt;span style=&#34;color:#228b22&#34;&gt;// 鼠标移上透明度
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        },
     });
&amp;lt;/&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;加到哪儿应该都行，我是粘到了extended_head里，这样会加载到head标签中。人物长什么样子可以直接百度“live2d 看板娘 ”+名字、长相什么的。我个人喜欢shizuku，双马尾好可爱ヽ(✿ﾟ▽ﾟ)ノ!!!  hibiki也不错&lt;/p&gt;
&lt;h2 id=&#34;音乐插件&#34;&gt;音乐插件&lt;/h2&gt;
&lt;p&gt;使用了APlayer &amp;amp;&amp;amp; MetingJS。直接看MetingJS的github仓库即可：&lt;a href=&#34;https://github.com/metowolf/MetingJS&#34;&gt;MetingJS&lt;/a&gt;，暂时不用看Aplayer用法，CV大法好（doge）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;rel&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;href&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&amp;#34;&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;src&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;src&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;span style=&#34;color:#228b22&#34;&gt;&amp;lt;!-- 放在想生成播放器的地方⬇ --&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;meting-js&lt;/span&gt;
	&lt;span style=&#34;color:#658b00&#34;&gt;server&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;netease&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#658b00&#34;&gt;type&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;playlist&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#658b00&#34;&gt;id&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;					
	&lt;span style=&#34;color:#658b00&#34;&gt;list-folded &lt;/span&gt;= &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;	
	&lt;span style=&#34;color:#658b00&#34;&gt;volume &lt;/span&gt;= &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;0.3&amp;#34;&lt;/span&gt;			
&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;meting-js&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aplay是一个Html5音乐播放器，而MetingJS结合了国内几大音乐平台的api。本想直接用外链，但网易云官方现在似乎不提供可用的歌单外链。&lt;/p&gt;
&lt;p&gt;注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在使用Meting提供的网易云api时，歌单里歌曲太多或使用“我喜欢的音乐”歌单可能无法从api获取数据！&lt;/li&gt;
&lt;li&gt;需要的js、css文件在头文件中&lt;code&gt;按顺序&lt;/code&gt;引入（有依赖关系）&lt;/li&gt;
&lt;li&gt;Aplayer官方提出了好多静态博客插件，唯独没有hugo的。~~《如果早知道，用hugo会被孤立。。。》~~虽然我也没用那些插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;评论功能&#34;&gt;评论功能&lt;/h2&gt;
&lt;h1 id=&#34;我为什么用hugo&#34;&gt;我为什么用hugo?&lt;/h1&gt;
&lt;p&gt;​	哦我的上帝啊，瞧瞧这hugo！ko no sei gai还有更难用的静态网站生成器吗？当然我也没用过其他的，只是吐槽一下hhh&lt;/p&gt;
&lt;p&gt;​	一开始尝试在centos7上使用hugo（linux64位0.84.x版本），并用nginx做服务器部署生成的静态页面，遇到了路径问题，样式文件加载不出来；然后修改到一半，新的页面突然就生不出来了。。。QAQ&lt;/p&gt;
&lt;p&gt;​	改了配置文件、添加了新文章、执行hugo命令后也没有生成新的、正确的静态页面。根据提示，安装extended版本 ，结果又报错说缺少c++的新版动态库，但我的确是新版了（跟CSDN上的博客比）。现在有经验了，回想回想可能是配置文件或者命令错了。&lt;/p&gt;
&lt;p&gt;​		最后用了windows版+github pages。省时又省心，效果还一样。之前尝试部署到服务器上的我简直是个可爱的小傻瓜。&lt;/p&gt;
&lt;p&gt;​		另，gitee的Pages服务这几个月关闭了，预计8月左右恢复。说是为了建设绿色网络环境什么的，可能不符合规定的要被清除？&lt;/p&gt;
&lt;p&gt;​		近日正好收到一篇公众号的推送，是关于hugo搭建博客的，就用上了。最早了解的是wordPress，但没有使用；身边人用的最多的是hexo。年轻时总想着搞个人博客，早就接触到了建站容易的静态博客，但感觉搭建起来对技术提高帮助不大，就没搞。&lt;/p&gt;
&lt;p&gt;​		现在博客做起来了，能刺激我总结总结经验知识。通过添加各种前端特效、插件，巩固了一下前端基础。这些可以做刚学完前端基础的过渡练习，要是那会儿就来实战练习就好了。那会儿天天做作业，贼枯燥，做完还就扔了忘了，没实战也没效率(* ￣︿￣)&lt;/p&gt;
- https://baiban114.github.io/tablerow.github.io/posts/hugo%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/ - </description>
        </item>
    
    
    
        <item>
        <title>tips</title>
        <link>https://baiban114.github.io/tablerow.github.io/posts/tips/</link>
        <pubDate>Sat, 24 Jul 2021 18:06:08 +0800</pubDate>
        
        <guid>https://baiban114.github.io/tablerow.github.io/posts/tips/</guid>
        <description>彦祖，你又来了 https://baiban114.github.io/tablerow.github.io/posts/tips/ -&lt;p&gt;数学嘛，又不是主业，实用的该用时想起来就好，其他的看兴趣啦~高中我不都是按兴趣学的嘛~&lt;/p&gt;
&lt;h1 id=&#34;考研数学&#34;&gt;考研数学&lt;/h1&gt;
&lt;h2 id=&#34;出题套路&#34;&gt;出题套路&lt;/h2&gt;
&lt;p&gt;加过来减过去；四则运算；没思路时先试试&lt;/p&gt;
&lt;p&gt;2020把加减又变成大于小于；&lt;/p&gt;
&lt;h2 id=&#34;张宇高数第一讲&#34;&gt;张宇高数第一讲&lt;/h2&gt;
&lt;p&gt;等式 =&amp;gt; 两边取极限、倒数、积分、同乘同除同加减、取对数，换位置，目的是得到想要的。&lt;/p&gt;
&lt;p&gt;出题套路 =&amp;gt; 改变数字顺序，把本来该在一起的拆开(例1.1)；有些将来会被消掉，不用怕。&lt;/p&gt;
&lt;p&gt;换元：无法拆开的xt、x-t等换元。比如f(xt)&lt;/p&gt;
&lt;p&gt;数形结合百般好；别光给哪儿捯饬等式，画图啊！看看性状面积啥的&lt;/p&gt;
&lt;h2 id=&#34;第二讲&#34;&gt;第二讲&lt;/h2&gt;
&lt;p&gt;已知不等式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sinx &amp;lt;= x；sinx其实比x小，看泰勒展开式就知道；同济书里的证明：&lt;img src=&#34;https://img-blog.csdnimg.cn/20201117164621931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnRfMjAxMg==,size_16,color_FFFFFF,t_70&#34; alt=&#34;alt&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例2.13：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/baiban114/tianrun/raw/master/imgs/20210802172809.png&#34; alt=&#34;image-20210802172757774&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第四讲之前&#34;&gt;第四讲之前&lt;/h2&gt;
&lt;p&gt;奇奇得偶；奇函数泰勒展开不会有偶数次方；&lt;/p&gt;
- https://baiban114.github.io/tablerow.github.io/posts/tips/ - </description>
        </item>
    
    
    
        <item>
        <title>灵鸡一动</title>
        <link>https://baiban114.github.io/tablerow.github.io/posts/%E7%81%B5%E9%B8%A1%E4%B8%80%E5%8A%A8/</link>
        <pubDate>Wed, 21 Jul 2021 05:37:27 +0800</pubDate>
        
        <guid>https://baiban114.github.io/tablerow.github.io/posts/%E7%81%B5%E9%B8%A1%E4%B8%80%E5%8A%A8/</guid>
        <description>彦祖，你又来了 https://baiban114.github.io/tablerow.github.io/posts/%E7%81%B5%E9%B8%A1%E4%B8%80%E5%8A%A8/ -&lt;blockquote&gt;
&lt;p&gt;使用次数少的（比如安装软件，也没遇到意外情况）就不需要记录了。相同主题整理的多了要考虑拆分，像分库分表一样。&lt;/p&gt;
&lt;p&gt;知识类分三档：死记硬背的、理解的、容易忘也不好整理进体系的小tips。本页记录理解档内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;知识内容都是自己的理解，要时长更新纠错&lt;/p&gt;
&lt;p&gt;标题灵感来自高中物理老师ᕕ( ᐛ )ᕗ&lt;/p&gt;
&lt;h1 id=&#34;老生常谈的概念&#34;&gt;老生常谈的概念&lt;/h1&gt;
&lt;h2 id=&#34;动态和静态&#34;&gt;动态和静态&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;动态&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;静态&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;出处&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;随数据而变的&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;写死的文件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;动态页面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;被调度、分配资源、随运行时环境而改变；有状态转换？上下文/命名空间等限制&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;程序、作业、镜像&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;操作系统、Docker&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;应该雀食哈，动态才有状态转换的概念&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;常见概念：线性、连续、离散、顺序、索引、链式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;物理存储上的概念&#34;&gt;物理存储上的概念：&lt;/h2&gt;
&lt;p&gt;这四项在逻辑结构中也有对应的表：顺序表（数组）、链表、索引表、哈希表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;顺序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个接一个的，连续的，有序的（唯一前驱和后缀关系）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;链式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;哈希&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;顺序&#34;&gt;顺序&lt;/h2&gt;
&lt;p&gt;顺序存储指的是，集合里面的元素都是按照次序排列在一块连续的存储空间中；&lt;/p&gt;
&lt;p&gt;在文件中的话&lt;/p&gt;
&lt;p&gt;顺序文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优势:读、写一大批记录&lt;/li&gt;
&lt;li&gt;缺点： 查找、修改、增加、删除单条记录&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;索引&#34;&gt;索引&lt;/h2&gt;
&lt;p&gt;建立索引表，从索引表直接读取地址&lt;/p&gt;
&lt;p&gt;文件结构的索引表是定长记录的顺序文件&lt;/p&gt;
&lt;h2 id=&#34;逻辑结构上的概念&#34;&gt;逻辑结构上的概念&lt;/h2&gt;
&lt;p&gt;分为线性和非线性&lt;/p&gt;
&lt;h3 id=&#34;线性&#34;&gt;线性：&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;感觉真的像一条线上的关系；&lt;/p&gt;
&lt;p&gt;是连续的么？和离散是什么关系？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;线性关系&#34;&gt;线性关系：&lt;/h6&gt;
&lt;p&gt;​	两个变量之间存在一次方&lt;a href=&#34;https://baike.baidu.com/item/%E5%87%BD%E6%95%B0%E5%85%B3%E7%B3%BB/9846826&#34;&gt;函数关系&lt;/a&gt;，就称它们之间存在线性关系。&lt;a href=&#34;https://baike.baidu.com/item/%E6%AD%A3%E6%AF%94%E4%BE%8B%E5%85%B3%E7%B3%BB/8192987&#34;&gt;正比例关系&lt;/a&gt;是线性关系中的特例，&lt;a href=&#34;https://baike.baidu.com/item/%E5%8F%8D%E6%AF%94%E4%BE%8B%E5%85%B3%E7%B3%BB/8193245&#34;&gt;反比例关系&lt;/a&gt;不是线性关系。&lt;/p&gt;
&lt;p&gt;​	&lt;em&gt;反比例关系：两个变量乘积不变&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;​	如果把这两个变量分别作为点的横坐标与纵坐标，其图象是平面上的一条直线，则这两个变量之间的关系就是线性关系。即如果可以用一个二元一次方程来表达两个变量之间关系的话，这两个变量之间的关系称为线性关系，因而，二元一次方程也称为线性方程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数学里，一般说的线性，是说的线性映射，这是一个函数（或称为映射，function or map），而不是方程 (equation)。&lt;/p&gt;
&lt;p&gt;这个映射要同时满足两个条件：&lt;/p&gt;
&lt;p&gt;1，可加性 f(x + y) = f(x) + f(y)&lt;/p&gt;
&lt;p&gt;2，齐次性（同质性） f(αx) = αf(x)&lt;/p&gt;
&lt;p&gt;也有用 叠加特性：f(ax+by)=af(x)+bf(y) 合起来表示的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;这个齐次性放在齐次线性方程怎么理解？（我连名字都不一定记准。。）&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;数据结构上：一对一的关系&lt;/p&gt;
&lt;h6 id=&#34;线性的例子&#34;&gt;线性的例子&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;线性表：最基本的是：
&lt;ul&gt;
&lt;li&gt;数组（顺序表）：下标和元素一一对应，可随机存取：随便选一个位置存取&lt;/li&gt;
&lt;li&gt;链表：唯一前缀唯一后继;查找、表的合并不便&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;非线性&#34;&gt;非线性&lt;/h6&gt;
&lt;p&gt;树、图，一对多或多对多&lt;/p&gt;
&lt;h6 id=&#34;线性代数中学到的&#34;&gt;线性代数中学到的&lt;/h6&gt;
&lt;p&gt;行列式中两个向量可以互相表示，说明他们是&lt;strong&gt;线性相关&lt;/strong&gt;的(行列式得0，因为向量平行)&lt;/p&gt;
&lt;h2 id=&#34;流批&#34;&gt;流批！&lt;/h2&gt;
&lt;p&gt;仅理解概念用；有的是批处理命令，有的是批处理作业&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;流、流处理&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;批&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;出处or举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;流水一样源源不断的；来一个搞一个&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;先攒一批，一次搞一批；&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Mybatis流式查询（可实现分页）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;一般需要注意open和close&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;有些不处理完一批不停&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;字符流、字节流、IO流、代码流&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;联机命令接口&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;脱机命令接口&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;操作系统/win脚本（批处理）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;流式文件-无结构&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;（感觉记录式文件和批的概念没相似之处）&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;联机命令接口：命令行的方式，又叫交互模式；批处理模式，又叫脚本模式&lt;/p&gt;
&lt;p&gt;一批里也是一个一个来的，而不是一“个”作业；一批看作一个整体；抢占式是不是可以先让一批停下来？&lt;/p&gt;
&lt;h2 id=&#34;抽象与具体&#34;&gt;抽象与具体&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;抽象&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;具体&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;出处or举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;只有概念没有实体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;实体&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;类和对象/抽象函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;云计算&#34;&gt;云计算&lt;/h1&gt;
&lt;p&gt;（cloud computing）是分布式计算的一种，通过网络“云”将计算处理程序分解成小程序计算。（有点儿像分治？mapreduce?）&lt;/p&gt;
&lt;h2 id=&#34;云计算三种服务模式&#34;&gt;云计算三种服务模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;IaaS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SaaS：(Software as a Service)通过网络进行程序提供的服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PaaS:（Platform as a Service）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是指&lt;a href=&#34;https://baike.baidu.com/item/%E5%B9%B3%E5%8F%B0%E5%8D%B3%E6%9C%8D%E5%8A%A1/4329761&#34;&gt;平台即服务&lt;/a&gt;。  把服务器平台作为一种服务提供的商业模式，以SaaS的模式提交给用户。因此，PaaS也是&lt;a href=&#34;https://baike.baidu.com/item/SaaS&#34;&gt;SaaS&lt;/a&gt;模式的一种应用。但是，PaaS的出现可以加快SaaS的发展，尤其是加快SaaS应用的开发速度(位于中间件层，提供企业进行定制化研发的中间件平台、数据库、应用服务器等)。&lt;/li&gt;
&lt;li&gt;在2007年国内外SaaS厂商先后推出自己的PAAS平台&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在云计算范围内（分布式、网络）考虑这仨的概念！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cloud Foundry是业界第一个开源PaaS云平台。诞生了“容器”？由Vmware小组开发&lt;/p&gt;
&lt;p&gt;而Docker打包时带上了环境（操作系统的rootfs，很小，内核直接用宿主机的），不用再在另一台机器的配置上麻烦。但单独的docker只是部署小项目的小工具，用容器编排(Docker Compose)和容器集群才算提供Paas。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;单个容器的应用肯定不足以支撑项目，不用集群用不了分布式、云计算？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;猜想&#34;&gt;猜想&lt;/h1&gt;
&lt;h2 id=&#34;用于联系的数学公式&#34;&gt;用于联系的数学公式&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;可根据提供的条件互相转化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;数列与极限：归结原则&lt;/p&gt;
&lt;p&gt;拉格朗日中值定理：连接f与f`&lt;/p&gt;
&lt;p&gt;连续连接函数与导数（还有极限）&lt;/p&gt;
&lt;h1 id=&#34;充要条件们&#34;&gt;充要条件们&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;函数值存在 &amp;lt;=&amp;gt; 该点极限存在&lt;/li&gt;
&lt;li&gt;可导 &amp;lt;=&amp;gt; 左导数等于右导数&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;数据库离散数学文件系统oop&#34;&gt;数据库、离散数学、文件系统、OOP&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;数据库&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;离散数学&lt;/th&gt;
&lt;th&gt;文件系统&lt;/th&gt;
&lt;th&gt;OOP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;某种属性的，是数据中可命名的最小逻辑数据单位&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;列&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td&gt;数据项&lt;/td&gt;
&lt;td&gt;成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;数据项的集合&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;记录；行&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;元组？&lt;/td&gt;
&lt;td&gt;记录（定长、可变长）&lt;/td&gt;
&lt;td&gt;对象、类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;实体表&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td&gt;记录式文件&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;系统调用&#34;&gt;系统调用&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;文件
&lt;ul&gt;
&lt;li&gt;open:
&lt;ul&gt;
&lt;li&gt;将指明文件的属性（包括在外存的物理位置）从外存复制到内存==打开文件表==的一个表目中，&lt;/li&gt;
&lt;li&gt;同时返回索引（王道又说是指针？编号？），以后就操作指针&lt;/li&gt;
&lt;li&gt;打开计数器&lt;code&gt;++&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;close&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;控制块&#34;&gt;控制块&lt;/h1&gt;
&lt;h2 id=&#34;文件控制块fcb&#34;&gt;文件控制块FCB&lt;/h2&gt;
&lt;h2 id=&#34;进程控制块pcb&#34;&gt;进程控制块PCB&lt;/h2&gt;
&lt;h2 id=&#34;作业控制块jcb&#34;&gt;作业控制块JCB&lt;/h2&gt;
- https://baiban114.github.io/tablerow.github.io/posts/%E7%81%B5%E9%B8%A1%E4%B8%80%E5%8A%A8/ - </description>
        </item>
    
    
  </channel>
</rss> 